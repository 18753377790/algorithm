package com.algorithm.geekbang.advanced.btree;

/**
 * @Author 李非凡
 * @Description:
 * B+树
 *
 * MySQL索引
 * 在执行效率方面，我们希望通过索引，查询数据的效率尽可能的高；
 * 在存储空间方面，我们希望索引不要消耗太多的内存空间。
 *
 * 占用内存多，将索引存储在硬盘中
 * 访问速度慢，减少磁盘IO次数，树的高度就是磁盘IO的次数，要降低树的高度
 *
 * B+树的特点
 * 1.每个节点中子节点的个数不能超过 m，也不能小于 m/2；
 * 2.根节点的子节点个数可以不超过 m/2，这是一个例外；
 * 3.m 叉树只存储索引，并不真正存储数据，这个有点儿类似跳表；
 * 4.通过双向链表将叶子节点串联在一起，这样可以方便按区间查找；
 * 5.一般情况，根节点会被存储在内存中，其他节点存储在磁盘中。
 * @Date 2019/10/17 22:33
 * @Version 1.0
 */
public class BPlusTree {

    public static void main(String[] args) {

    }
}
